import type { Projection, LngLat, WorldCoordinates } from "../../../common/types";
/**
 * @class Mercator projection onto a sphere.
 * Used by many mapping services, in particular OpenStreetMap.
 * @name projection.sphericalMercator
 * @augments Projection
 * @static
 * @example
 * ```js
 * // Create a map in the spherical Mercator projection
 * const map = new ymaps3.YMap(document.getElementById('YMapsID'), {
 *     location: {
 *         center: [37, 55],
 *         zoom: 6
 *     },
 *     projection: new ymaps3.SphericalMercator()
 * });
 * const dataSourceProps = {
 *     raster: {
 *         type: 'ground',
 *         fetchTile: "https://tile.openstreetmap.org/{{z}}/{{y}}/{{x}}"
 *     }
 * };
 * // Add osm tiles
 * const dataSource = new ymaps3.YMapTileDataSource({
 *     id: "osmSource",
 *     ...dataSourceProps,
 * });
 *
 * const layer = new ymaps3.YMapLayer({
 *     id: "osm",
 *     source: "osmSource",
 *     type: "ground",
 * });
 * ```
 */
declare class SphericalMercator implements Projection {
    private _maxLatitudeRad;
    toWorldCoordinates(coords: LngLat): WorldCoordinates;
    fromWorldCoordinates(world: WorldCoordinates): LngLat;
    private _worldXToLongitude;
    private _longitudeToWorldX;
    private _latitudeToWorldY;
    private _worldYToLatitude;
}
declare const sphericalMercator: SphericalMercator;
export { sphericalMercator };
